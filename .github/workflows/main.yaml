name: main
on:
  push:
    branches:
    - main
    tags:
    - "*"
  pull_request:
jobs:
  hack:
    runs-on: ubuntu-latest
    name: ubuntu / stable / features
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: cargo hack --feature-powerset check
  msrv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        msrv: ["1.56.1"]
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        run: cargo check
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2
      with:
        set-safe-directory: true
    - uses: actions/setup-python@v4
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: pre-commit/action@v2.0.0
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ''
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
  release:
    needs: [build, pre-commit]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_tag.outputs.git_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.13.0
        with:
          bodyFile: ./CHANGELOG.md
          prerelease: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') }}
  creates:
    needs: [release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
